import {solve} from "./lib.js";
const N = 9;
const Empty = 0;
var numSelected = null;    //check for number input selection
var errors = 0;

var puzzle = [
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,3,0,8,5],
    [0,0,1,0,2,0,0,0,0],
    [0,0,0,5,0,7,0,0,0],
    [0,0,4,0,0,0,1,0,0],
    [0,9,0,0,0,0,0,0,0],
    [5,0,0,0,0,0,0,7,3],
    [0,0,2,0,1,0,0,0,0],
    [0,0,0,0,4,0,0,0,9]
];

var solution = puzzle;   //solution is generated by backtracking
if (solve(solution, 0, 0)) {
    console.log("Solve was successful");
    window.onload = function () {
        setGame();
    }
    
    function setGame () {
        //digit inputs
        for ( let i = 1; i <= N; i++) {
            let number = document.createElement("div"); // <div> </div>
            number.id = i                                       //<div id= "i"> </div>
            number.addEventListener("click", selectNumber);
            number.innerText = i;                               //<div id= "i">i</div>
            number.classList.add("number");           //<div id= "i" class= "number">i</div> 
            document.getElementById("digits").appendChild(number); // places each of <div id= "i" class= "number">i</div>  under div digits in html
        }
        //board
        for ( let r = 0; r < N; r++) {
            for (let c = 0; c < N; c++){
                let tile = document.createElement("div");
                tile.id = r.toString() + "-" + c.toString();     //gives specific row-column id to a cell
                if (puzzle[r][c] != Empty) {                    //skips setting the zeros which means Empty
                    tile.innerText = puzzle[r][c];              //writes game board pointed info to that div
                    tile.classList.add("tile_start"); //gives it a specific class to know start up numbers
                }
    
                if (r == 2 || r == 5) {                         //helps to create grid
                    tile.classList.add("horizontal_line"); // draws grid horizontal line
                }
                if (c == 2 || c == 5) {                         //helps to create grid
                    tile.classList.add("vertical_line"); // draws grid vertical line
                }
                tile.addEventListener("click", selectTile);
                tile.classList.add("tile");
                document.getElementById("board").append(tile);
            }
        }
    }
    
    function selectNumber () {
        if (numSelected != null) {
            numSelected.classList.remove("number_selected"); /* if a num was selected already, clicking a number removes the number_selected
                                                                class first before adding number_selected to ensure only one selection*/
        }
        numSelected = this;                                 // this reassign numSelected to the particular number div clicked
        numSelected.classList.add("number_selected");  // replaces the class name from number to number_selected
    }
    
    function selectTile () {
        if (numSelected) {          //does this only if numSelected != null
            /*if (this.innerText != "") {  //disallow overwriting after input is done
                return;                 //exits function and do nothing else
            }
            */
            let cordinate = this.id.split("-"); // id for each cell looks like 0-0 0-1 2-4  split splits and collect to array of strings
            let r = parseInt(cordinate[0]);
            let c = parseInt(cordinate[1]);
            if (solution[r][c]  == numSelected.id) { //allow change only if input is the correct answer
                this.innerText = numSelected.id    // changes innerText of clicked box to numSelected id which is 1 to 9
            }
            else {                                  //if wrong, adds up ur errors
                errors += 1;
                document.getElementById("errors").innerText = errors;
            }
        }
    }
}
else {
    console.log("no solution exists");
}